<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a62b5083-e580-4a60-92bb-684865d5b034" name="Changes" comment="일단 너의 코드를 이용해 돌아가는걸 테스트 해보려고 상위폴더에서 너의 코드를 상속한 파일 하나, import한 파일 하나를 만들었음. 그런데 여기서 궁금증이 label_classifier_from_filename.py를 만들다 들었는데, 이미 너가 만들어놓은걸 다시 적는것 같아서 의미가 있는건지 모르겠어.&#10;&#10;1)파일 이름에서 정보를 얻어내는것만 만들고, 그 뒤의 과정(분류 후 옮기기)은 너의 코드에도 이미 있으니 그 코드들의 def main()에서 실행하는건가? &#10;2)아니면 지금 방식대로 이렇게 하는게 맞는건가? &#10;3)빈 파일에 def main을 하고 다 불러와서 처리하는건가?&#10;&#10;너의 코드를 수정 안하는게 규칙이라 생각해서 1이 아닌줄 알았는데 def main()은 수정해도 될것 같고..근데 그렇게 하면 테스트는 어떻게 돌려야 하지? 싶네요 빨리 알려주세요">
      <change afterPath="$PROJECT_DIR$/test_git/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test_git" beforeDir="false" afterPath="$PROJECT_DIR$/test_git" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <favorite-branches>
      <branch-storage>
        <map>
          <entry type="REMOTE">
            <value>
              <list>
                <branch-info repo="$PROJECT_DIR$" source="origin/image_proc" />
              </list>
            </value>
          </entry>
        </map>
      </branch-storage>
    </favorite-branches>
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="image_proc" />
        <entry key="$PROJECT_DIR$/test_git" value="Provider" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="ROOT_SYNC" value="SYNC" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 1
}</component>
  <component name="ProjectId" id="2U9ikrUVZr13tHKXWxtjuYUeBVe" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/mirun/PycharmProjects/PhotoTimestamp-AI&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\mirun\PycharmProjects\PhotoTimestamp-AI\modelAPI\modelapi" />
      <recent name="C:\Users\mirun\PycharmProjects\PhotoTimestamp-AI\modelAPI\modelapi\dataprovide" />
    </key>
  </component>
  <component name="RunManager" selected="Python.label_classifier_from_filename">
    <configuration name="image_info_extractor (1)" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="PhotoTimestamp-AI" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/modelAPI/modelapi" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/modelAPI/modelapi/image_info_extractor.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="image_info_extractor" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="PhotoTimestamp-AI" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/modelAPI/modelapi" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="C:\Users\mirun\PycharmProjects\PhotoTimestamp-AI\modelAPI\modelapi\image_info_extractor.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="image_provider_by_location" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="PhotoTimestamp-AI" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/modelAPI/modelapi/dataprovide" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/modelAPI/modelapi/dataprovide/image_provider_by_location.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="label_classifier_from_filename" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="PhotoTimestamp-AI" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/modelAPI/modelapi" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/modelAPI/modelapi/label_classifier_from_filename.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="main" type="PythonConfigurationType" factoryName="Python" nameIsGenerated="true">
      <module name="pythonProject1" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="SDK_NAME" value="Python 3.11 (PhotoTimestamp-AI)" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="IS_MODULE_SDK" value="false" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/main.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <configuration name="test (2)" type="PythonConfigurationType" factoryName="Python" temporary="true" nameIsGenerated="true">
      <module name="PhotoTimestamp-AI" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <envs>
        <env name="PYTHONUNBUFFERED" value="1" />
      </envs>
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/modelAPI/modelapi" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/modelAPI/modelapi/test.py" />
      <option name="PARAMETERS" value="" />
      <option name="SHOW_COMMAND_LINE" value="false" />
      <option name="EMULATE_TERMINAL" value="false" />
      <option name="MODULE_MODE" value="false" />
      <option name="REDIRECT_INPUT" value="false" />
      <option name="INPUT_FILE" value="" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Python.main" />
      <item itemvalue="Python.image_info_extractor (1)" />
      <item itemvalue="Python.label_classifier_from_filename" />
      <item itemvalue="Python.image_info_extractor" />
      <item itemvalue="Python.test (2)" />
      <item itemvalue="Python.image_provider_by_location" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Python.label_classifier_from_filename" />
        <item itemvalue="Python.image_info_extractor (1)" />
        <item itemvalue="Python.image_info_extractor" />
        <item itemvalue="Python.image_provider_by_location" />
        <item itemvalue="Python.test (2)" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="a62b5083-e580-4a60-92bb-684865d5b034" name="Changes" comment="" />
      <created>1692358342532</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1692358342532</updated>
    </task>
    <task id="LOCAL-00001" summary="일단 너의 코드를 이용해 돌아가는걸 테스트 해보려고 상위폴더에서 너의 코드를 상속한 파일 하나, import한 파일 하나를 만들었음. 그런데 여기서 궁금증이 label_classifier_from_filename.py를 만들다 들었는데, 이미 너가 만들어놓은걸 다시 적는것 같아서 의미가 있는건지 모르겠어.&#10;&#10;1)파일 이름에서 정보를 얻어내는것만 만들고, 그 뒤의 과정(분류 후 옮기기)은 너의 코드에도 이미 있으니 그 코드들의 def main()에서 실행하는건가? &#10;2)아니면 지금 방식대로 이렇게 하는게 맞는건가? &#10;3)빈 파일에 def main을 하고 다 불러와서 처리하는건가?&#10;&#10;너의 코드를 수정 안하는게 규칙이라 생각해서 1이 아닌줄 알았는데 def main()은 수정해도 될것 같고..근데 그렇게 하면 테스트는 어떻게 돌려야 하지? 싶네요 빨리 알려주세요">
      <option name="closed" value="true" />
      <created>1695399942663</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1695399942663</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="UnknownFeatures">
    <option featureType="dependencySupport" implementationName="executable:docker" />
    <option featureType="dependencySupport" implementationName="executable:kubectl" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="origin/my_photo_to_ds" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="- exif_provider_from _dir에서 인코딩을 utf-8로 해야 되는 EXIF파일도 있으니 그것도 참고하시길" />
    <MESSAGE value="일단 너의 코드를 이용해 돌아가는걸 테스트 해보려고 상위폴더에서 너의 코드를 상속한 파일 하나, import한 파일 하나를 만들었음. 그런데 여기서 궁금증이 label_classifier_from_filename.py를 만들다 들었는데, 이미 너가 만들어놓은걸 다시 적는것 같아서 의미가 있는건지 모르겠어.&#10;&#10;1)파일 이름에서 정보를 얻어내는것만 만들고, 그 뒤의 과정(분류 후 옮기기)은 너의 코드에도 이미 있으니 그 코드들의 def main()에서 실행하는건가? &#10;2)아니면 지금 방식대로 이렇게 하는게 맞는건가? &#10;3)빈 파일에 def main을 하고 다 불러와서 처리하는건가?&#10;&#10;너의 코드를 수정 안하는게 규칙이라 생각해서 1이 아닌줄 알았는데 def main()은 수정해도 될것 같고..근데 그렇게 하면 테스트는 어떻게 돌려야 하지? 싶네요 빨리 알려주세요" />
    <option name="LAST_COMMIT_MESSAGE" value="일단 너의 코드를 이용해 돌아가는걸 테스트 해보려고 상위폴더에서 너의 코드를 상속한 파일 하나, import한 파일 하나를 만들었음. 그런데 여기서 궁금증이 label_classifier_from_filename.py를 만들다 들었는데, 이미 너가 만들어놓은걸 다시 적는것 같아서 의미가 있는건지 모르겠어.&#10;&#10;1)파일 이름에서 정보를 얻어내는것만 만들고, 그 뒤의 과정(분류 후 옮기기)은 너의 코드에도 이미 있으니 그 코드들의 def main()에서 실행하는건가? &#10;2)아니면 지금 방식대로 이렇게 하는게 맞는건가? &#10;3)빈 파일에 def main을 하고 다 불러와서 처리하는건가?&#10;&#10;너의 코드를 수정 안하는게 규칙이라 생각해서 1이 아닌줄 알았는데 def main()은 수정해도 될것 같고..근데 그렇게 하면 테스트는 어떻게 돌려야 하지? 싶네요 빨리 알려주세요" />
  </component>
</project>
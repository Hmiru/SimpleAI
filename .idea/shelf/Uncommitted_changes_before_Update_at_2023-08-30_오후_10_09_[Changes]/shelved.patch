Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from pre_proc import PreProcessing, ImageInfo, DatasetInfo\r\n\r\n\r\ndef main():\r\n\r\n    image_info = ImageInfo(image_height=224, image_width=224) \r\n    dataset_info = DatasetInfo(validation_split=0.3, batch_size=32, seed=188)\r\n    image_path = \"C:/Users/mirun/PycharmProjects/pythonProject/CV/for_vision/animal_face/classification_image\"\r\n    preprocessor = PreProcessing(image_path, image_info, dataset_info) # 전처리용 객체 만드는게 이런거?\r\n    preprocessor.get_dataset_through_all_procedure()\r\n\r\n    train_ds = preprocessor.train_ds\r\n    valid_ds = preprocessor.valid_ds\r\n    test_ds = preprocessor.test_ds\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n    \r\n'''\r\ndata_preprocessor.get_ds(data_dir).normalize().shuffle()\r\ntrain_ds = data_preprocessor.train_ds\r\nvalid_ds = data_preprocessor.valid_ds\r\ntest_ds = data_preprocessor.test_ds\r\n\r\nbase_hidden_units = 16  # 은닉층의 유닛수\r\nweight_decay = 1e-4    # L2 규제화 파라미터 Lambda\r\nmodel=build_model(base_hidden_units, weight_decay)  # 모델 생성하기\r\n\r\nstudy(train_ds, valid_ds,model)\r\nevaluate(model, test_ds)  # 모델 평가하기\r\n\r\nimg_array = image_input(image_path)  # 사진 입력받기\r\nimage_output(model, img_array)  # 사진 결과 출력하기\r\n'''\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision 7346ff78dc5ea8d53d8ae9143391eb3ad4701add)
+++ b/main.py	(date 1692364503419)
@@ -3,10 +3,10 @@
 
 def main():
 
-    image_info = ImageInfo(image_height=224, image_width=224) 
+    image_info = ImageInfo(image_height=224, image_width=224)
     dataset_info = DatasetInfo(validation_split=0.3, batch_size=32, seed=188)
-    image_path = "C:/Users/mirun/PycharmProjects/pythonProject/CV/for_vision/animal_face/classification_image"
-    preprocessor = PreProcessing(image_path, image_info, dataset_info) # 전처리용 객체 만드는게 이런거?
+    image_path = "C:/Users/mirun/PycharmProjects/pythonProject1/for_vision/animal_face/classification_image"
+    preprocessor = PreProcessing(image_path, image_info, dataset_info)
     preprocessor.get_dataset_through_all_procedure()
 
     train_ds = preprocessor.train_ds
@@ -15,23 +15,4 @@
 
 
 if __name__ == "__main__":
-    main()
-    
-'''
-data_preprocessor.get_ds(data_dir).normalize().shuffle()
-train_ds = data_preprocessor.train_ds
-valid_ds = data_preprocessor.valid_ds
-test_ds = data_preprocessor.test_ds
-
-base_hidden_units = 16  # 은닉층의 유닛수
-weight_decay = 1e-4    # L2 규제화 파라미터 Lambda
-model=build_model(base_hidden_units, weight_decay)  # 모델 생성하기
-
-study(train_ds, valid_ds,model)
-evaluate(model, test_ds)  # 모델 평가하기
-
-img_array = image_input(image_path)  # 사진 입력받기
-image_output(model, img_array)  # 사진 결과 출력하기
-'''
-
-
+    main()
\ No newline at end of file
Index: model.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># -*- coding: utf-8 -*-\r\n\"\"\"model.ipynb\r\n\r\nAutomatically generated by Colaboratory.\r\n\r\nOriginal file is located at\r\n    https://colab.research.google.com/drive/1AH8cBpdMa3JCS_D7B0UQlJxx2AG3s6LV\r\n\"\"\"\r\n\r\nfrom keras import Sequential\r\nfrom keras.layers import Dense,Activation,Flatten,Dropout,BatchNormalization,Conv2D,MaxPooling2D\r\nfrom keras import regularizers\r\n\r\ndef build_model(base_hidden_units, weight_decay):\r\n\r\n  model=Sequential() #(차례대로 층을 추가하는)순차형 모델 초기화\r\n\r\n  #conv1\r\n  model.add(Conv2D(base_hidden_units, kernel_size=3, padding='same',\r\n                  kernel_regularizer=regularizers.l2(weight_decay),input_shape=(135,240,3)))\r\n  model.add(Activation('relu'))\r\n\r\n  #conv2\r\n  model.add(Conv2D(base_hidden_units, kernel_size=3, padding='same',\r\n                  kernel_regularizer=regularizers.l2(weight_decay)))\r\n  model.add(Activation('relu'))\r\n\r\n  #POOL1\r\n  model.add(MaxPooling2D(pool_size=(2,2)))\r\n  model.add(Dropout(0.3))\r\n\r\n  #conv3\r\n  model.add(Conv2D(base_hidden_units*2, kernel_size=3, padding='same',\r\n                  kernel_regularizer=regularizers.l2(weight_decay)))\r\n  model.add(Activation('relu'))\r\n\r\n  #conv4\r\n  model.add(Conv2D(base_hidden_units*2, kernel_size=3, padding='same',\r\n                  kernel_regularizer=regularizers.l2(weight_decay)))\r\n  model.add(Activation('relu'))\r\n\r\n  #POOL2\r\n  model.add(MaxPooling2D(pool_size=(2,2)))\r\n\r\n  #conv5\r\n  model.add(Conv2D(base_hidden_units*4, kernel_size=3, padding='same',\r\n                  kernel_regularizer=regularizers.l2(weight_decay)))\r\n  model.add(Activation('relu'))\r\n\r\n  #conv6\r\n  model.add(Conv2D(base_hidden_units*4, kernel_size=3, padding='same',\r\n                  kernel_regularizer=regularizers.l2(weight_decay)))\r\n  model.add(Activation('relu'))\r\n\r\n  #POOL3\r\n  model.add(MaxPooling2D(pool_size=(2,2)))\r\n  model.add(Dropout(0.4))\r\n\r\n  #FC1\r\n  model.add(Flatten())\r\n\r\n  model.add(Dense(100,activation='relu'))\r\n\r\n  #FC2\r\n  model.add(Dense(4,activation='softmax'))\r\n\r\n  model.summary()\r\n\r\n  return model
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/model.py b/model.py
--- a/model.py	(revision 7346ff78dc5ea8d53d8ae9143391eb3ad4701add)
+++ b/model.py	(date 1692364503425)
@@ -1,69 +1,0 @@
-# -*- coding: utf-8 -*-
-"""model.ipynb
-
-Automatically generated by Colaboratory.
-
-Original file is located at
-    https://colab.research.google.com/drive/1AH8cBpdMa3JCS_D7B0UQlJxx2AG3s6LV
-"""
-
-from keras import Sequential
-from keras.layers import Dense,Activation,Flatten,Dropout,BatchNormalization,Conv2D,MaxPooling2D
-from keras import regularizers
-
-def build_model(base_hidden_units, weight_decay):
-
-  model=Sequential() #(차례대로 층을 추가하는)순차형 모델 초기화
-
-  #conv1
-  model.add(Conv2D(base_hidden_units, kernel_size=3, padding='same',
-                  kernel_regularizer=regularizers.l2(weight_decay),input_shape=(135,240,3)))
-  model.add(Activation('relu'))
-
-  #conv2
-  model.add(Conv2D(base_hidden_units, kernel_size=3, padding='same',
-                  kernel_regularizer=regularizers.l2(weight_decay)))
-  model.add(Activation('relu'))
-
-  #POOL1
-  model.add(MaxPooling2D(pool_size=(2,2)))
-  model.add(Dropout(0.3))
-
-  #conv3
-  model.add(Conv2D(base_hidden_units*2, kernel_size=3, padding='same',
-                  kernel_regularizer=regularizers.l2(weight_decay)))
-  model.add(Activation('relu'))
-
-  #conv4
-  model.add(Conv2D(base_hidden_units*2, kernel_size=3, padding='same',
-                  kernel_regularizer=regularizers.l2(weight_decay)))
-  model.add(Activation('relu'))
-
-  #POOL2
-  model.add(MaxPooling2D(pool_size=(2,2)))
-
-  #conv5
-  model.add(Conv2D(base_hidden_units*4, kernel_size=3, padding='same',
-                  kernel_regularizer=regularizers.l2(weight_decay)))
-  model.add(Activation('relu'))
-
-  #conv6
-  model.add(Conv2D(base_hidden_units*4, kernel_size=3, padding='same',
-                  kernel_regularizer=regularizers.l2(weight_decay)))
-  model.add(Activation('relu'))
-
-  #POOL3
-  model.add(MaxPooling2D(pool_size=(2,2)))
-  model.add(Dropout(0.4))
-
-  #FC1
-  model.add(Flatten())
-
-  model.add(Dense(100,activation='relu'))
-
-  #FC2
-  model.add(Dense(4,activation='softmax'))
-
-  model.summary()
-
-  return model
\ No newline at end of file
Index: .idea/inspectionProfiles/profiles_settings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/inspectionProfiles/profiles_settings.xml b/.idea/inspectionProfiles/profiles_settings.xml
new file mode 100644
--- /dev/null	(date 1692364503403)
+++ b/.idea/inspectionProfiles/profiles_settings.xml	(date 1692364503403)
@@ -0,0 +1,6 @@
+<component name="InspectionProjectProfileManager">
+  <settings>
+    <option name="USE_PROJECT_PROFILE" value="false" />
+    <version value="1.0" />
+  </settings>
+</component>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1692367910017)
+++ b/.idea/misc.xml	(date 1692367910017)
@@ -0,0 +1,4 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" project-jdk-name="Python 3.11 (PhotoTimestamp-AI)" project-jdk-type="Python SDK" />
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1692367910023)
+++ b/.idea/vcs.xml	(date 1692367910023)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+    <mapping directory="$PROJECT_DIR$/test_git" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
